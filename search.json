[{"path":"https://manuelrubio.github.io/aramappings/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 aramappings authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"introduction-to-adaptable-radial-axes-ara-plots","dir":"Articles","previous_headings":"","what":"Introduction to Adaptable Radial Axes (ARA) plots","title":"Introduction to aramappings","text":"Adaptable Radial Axes (ARA) plots (Rubio-Sánchez, Sanchez, Lehmann 2017) interactive, exploratory data visualization technique related Star Coordinates (Kandogan 2000, 2001) Biplots (Gabriel 1971; Gower Hand 1995; Hofmann 2004; Grange, Roux, Gardner-Lubbe 2009; Greenacre 2010). ARA performs dimensionality reduction representing high-dimensional numerical data points plane three-dimensional space. Unlike many dimensionality reduction methods, ARA plots also visualize variable-specific information “axis vectors” corresponding labeled axis lines, vector associated particular data variable. axis vectors (interactively defined users, Star Coordinates) indicate directions values associated variables increase within plot. Additionally, high-dimensional observations mapped (optimal sense) onto plot order allow users estimate variable values visually projecting points onto labeled axes, Biplots.  ARA plot four variables breakfast cereal dataset. High-dimensional data values can estimated via projections onto labeled axes, Biplots.  previous ARA plot, “axis” vectors associated variables chosen distinguish healthier cereals (toward right) less healthy ones (toward left). instance, points right generally larger values Protein Vitamins, lower values Sugar Calories. Users can obtain approximations data values visually projecting plotted points onto labeled axes. example, users estimate value 57 calories point lies right.","code":""},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"formal-definition","dir":"Articles","previous_headings":"Introduction to Adaptable Radial Axes (ARA) plots","what":"Formal definition","title":"Introduction to aramappings","text":"ARA plots obtained solving following general convex optimization problem: , use following notation: \\(N\\): Number data observations = number mapped points. \\(n\\): Number data variables. \\(m\\): Dimensionality visualization space (2 3). \\(\\mathbf{X}\\): Data matrix dimensions \\(N\\times n\\), row represents data observation. \\(\\mathbf{V}\\): \\(n\\times m\\) matrix axis vectors. \\(\\)-th row axis vector associated \\(\\)-th data variable. \\(\\mathbf{W}\\): \\(n\\times n\\) diagonal matrix containing non-negative weights. \\(\\)-th weight related \\(\\)-th data variable. \\(\\mathbf{P}\\): Matrix mapped (“embedded”) points dimensions \\(N\\times m\\). row low-dimensional representation (.e., mapped point) data observation. \\(\\| \\cdot \\|\\): matrix norm. \\(\\mathcal{C}\\): possible constraints. Similarly Biplots, product \\(\\mathbf{P}\\mathbf{V}^{\\scriptstyle \\top}\\) represents estimates data values \\(\\mathbf{X}\\) projecting mapped points \\(\\mathbf{P}\\) axes defined \\(\\mathbf{V}\\). Thus, goal consists finding optimal embedded points minimize discrepancy original data values estimates. Lastly, matrix \\(\\mathbf{W}\\) can used control relative accuracy estimates variable. also worth noting variables similar scaling. Otherwise, solutions focus providing accurate estimates variables larger values. addition, centering data leads accurate estimates general. Thus, practice, recommend standardizing data, center data force variable unit variance.","code":""},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"types-of-ara-plots","dir":"Articles","previous_headings":"Introduction to Adaptable Radial Axes (ARA) plots","what":"Types of ARA plots","title":"Introduction to aramappings","text":"current version aramappings package 9 types ARA plots, stem combination three types matrix norms, three choices regarding constraints.","code":""},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"matrix-norm","dir":"Articles","previous_headings":"Introduction to Adaptable Radial Axes (ARA) plots > Types of ARA plots","what":"Matrix norm","title":"Introduction to aramappings","text":"current version package considers three norms: \\(\\| \\cdot \\|_{F}^{2}\\): Squared \\(\\ell^{2}\\) (Frobenius) norm (sum squares entries) \\(\\| \\cdot \\|_{1}\\): \\(\\ell^{1}\\) norm (sum absolute values entries) \\(\\| \\cdot \\|_{\\infty}\\): \\(\\ell^{\\infty}\\) norm (maximum absolute values entries) choice norm reflects analyst’s tolerance large estimation errors. \\(\\ell^{\\infty}\\) norm emphasizes minimizing maximum estimation error across variables axes, making suitable worst-case error critical. \\(\\ell^{2}\\) norm also penalizes larger errors, lesser extent. contrast, \\(\\ell^{1}\\) norm allows large estimation errors leads significantly smaller errors variables.","code":""},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"problem-constraints","dir":"Articles","previous_headings":"Introduction to Adaptable Radial Axes (ARA) plots > Types of ARA plots","what":"Problem constraints","title":"Introduction to aramappings","text":"current version package considers three options regarding constraints ARA optimization problem: Unconstrained problems. formulations include constraints may incorporate weight matrix \\(\\mathbf{W}\\), , combination lengths axis vectors, can used control desired relative accuracy estimating values specific variables. Variables higher associated weights longer axis vectors receive greater emphasis optimization. Exact estimates one variables. problems, weight matrix \\(\\mathbf{W}\\) used. Ordered estimates one variable. variant imposes weaker constraint. Instead requiring exact value estimates variable, sufficient estimates preserve ranking original data values. exact case, weight matrix \\(\\mathbf{W}\\) used formulations.","code":""},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"available-functions-in-aramappings","dir":"Articles","previous_headings":"Introduction to Adaptable Radial Axes (ARA) plots > Types of ARA plots","what":"Available functions in aramappings","title":"Introduction to aramappings","text":"aramappings package contains nine functions compute ARA mappings (.e., embedded points \\(\\mathbf{P}\\)), according chosen norm type constraints. names thefunctions shown following table: package also contains additional basic function drawing two-dimensional ARA plots using standardized data: draw_ara_plot_2d_standardized() function included order show results ARA mapping functions (.e., embedded points), together wirh axis vectors labeled axis lines. However, consider several aspects may necessary generating clear visualization. Note ARA implemented within interactive visualization environment offers extensive features. tool allow users dynamically manipulate plots (e.g., modifying axis vectors; customizing toggling elements axes, labels, variable names; encoding additional data dimensions point color, size, shape; animating transitions plots).","code":""},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to aramappings","text":"Install stable version CRAN Install development version aramappings GitHub :","code":""},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"usage-examples","dir":"Articles","previous_headings":"","what":"Usage examples","title":"Introduction to aramappings","text":"section presents several usage examples.","code":""},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"unconstrained-ara-plot-with-the-ell2-norm","dir":"Articles","previous_headings":"Usage examples","what":"Unconstrained ARA plot with the \\(\\ell^{2}\\) norm","title":"Introduction to aramappings","text":"recommend starting exploratory analysis using unconstrained ARA plot \\(\\ell^{2}\\) norm, can generated efficiently since mappings (\\(\\mathbf{P}\\)) can obtained closed-form expression (.e., formula). obvious first step load aramappings package: usage examples use Auto MPG dataset available packages ascentTraining grpnet, Kaggle, UCI Machine Learning Repository (Frank Asuncion 2010). case, load dataset ascentTraining package. Next, select subset numerical variables dataset. selected variables specified vector containing column indices original dataset. Furthermore, rename data set X, simply clarity respect notation defined . ARA functions halt data parameters contain missing values. Thus, proceed eliminating row (data observation) contains missing values. Naturally, another approach consists replacing missing values substituted values (imputation). moment X data.frame. order use ARA functions first need convert matrix: addition, strongly recommend standardizing data using ARA. save result variable Z since function draws plot needs original values X. preprocessed data, next step consists defining axis vectors, rows \\(\\mathbf{V}\\). can obtained manually (ideally graphical user interface), automatic method. instante, \\(\\mathbf{V}\\) matrix defining Principal Component Analysis transfomation (case ARA plot Principal Component Biplot). example, simply define configuration vectors polar coordinates transform Cartesian coordinates pol2cart() function package geometry. also possible define weights order control relative importance estimating accurately axis. nevertheless complex, since accuracy also depends length axis vectors. case, set two weigths 1 another two 0.75. Visually, weights determine level gray used color axis vectors ARA plot. defined data (Z), axis vectors (V), weights (weights), can proceed compute ARA mapping. unconstrained ARA plots \\(\\ell^{2}\\) norm solver parameter set “formula” (default), order obtain mapping closed-form expression. following code computes embedded points saves mapping$P, shows execution runtime involved computing mapping. ARA plots can get cluttered showing axis lines corresponding labels tick marks. Thus, function use draw ARA plot (draw_ara_plot_2d_standardized()) contains parameter called axis_lines specifying subset axis lines (labels) wish visualize. example show axes associated variables “mpg” “acceleration”. Note original data frame variables 1 6. However, since retained four variables (“mpg”, “horsepower”, “weight”, “acceleration”), column index “acceleration” now 4. Also, plotted points can colored according values particular variable. example, color points according value variable “mpg”. Finally, generate ARA plot calling draw_ara_plot_2d_standardized(): Unconstrained ARA plot L2 norm subset Autompg dataset.  ","code":"# Load package library(aramappings) # Load data library(ascentTraining) # contains the Auto MPG dataset data(\"auto_mpg\") # Define subset of (numerical) variables selected_variables <- c(1, 4, 5, 6) # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\")  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ] # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric) # Standardize data Z <- scale(X) # Define axis vectors (2-dimensional in this example) library(geometry) r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r) # Define weights weights <- c(1, 0.75, 0.75, 1) # Compute the mapping and print the execution time start <- Sys.time() mapping <- ara_unconstrained_L2(   Z,   V,   weights = weights,   solver = \"formula\" ) end <- Sys.time() print(end - start, units = \"secs\") #> Time difference of 0.00978899 secs # Select variables with labeled axis lines on ARA plot axis_lines <- c(1, 4) # 1:\"mpg\", 4:\"acceleration\") # Select variable used for coloring embedded points color_variable <- 1 # \"mpg\" # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   weights = weights,   axis_lines = axis_lines,   color_variable = color_variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"exact-and-ordered-ara-plots","dir":"Articles","previous_headings":"Usage examples","what":"Exact and ordered ARA plots","title":"Introduction to aramappings","text":"Exact ordered ARA plots use weights, necessary specify variable obtain exact estimates, ordering plotted points:","code":"variable <- 1 # \"mpg\""},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"exact-ara-plot","dir":"Articles","previous_headings":"Usage examples > Exact and ordered ARA plots","what":"Exact ARA plot","title":"Introduction to aramappings","text":"exact ARA mapping \\(\\ell^{2}\\) norm computed : Note also efficient since solution can also expressed formula. Finally, generate ARA plot: Exact ARA plot L2 norm subset Autompg dataset. Exact estimates obtained variable ‘mpg’.   Note colors plotted points consonance position along “mpg” axis.","code":"# Compute the mapping and print the execution time start <- Sys.time() mapping <- ara_exact_L2(   Z,   V,   variable = variable,   solver = \"formula\" ) end <- Sys.time() print(end - start, units = \"secs\") #> Time difference of 0.6744533 secs # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   axis_lines = axis_lines,   color_variable = color_variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"ordered-ara-plot","dir":"Articles","previous_headings":"Usage examples > Exact and ordered ARA plots","what":"Ordered ARA plot","title":"Introduction to aramappings","text":"optimization problem ordered ARA mapping \\(\\ell^{2}\\) quadratic program (QP). following code solves problem clarabel package. Finally, generate ARA plot: Ordered ARA plot L2 norm subset Autompg dataset. values ‘mpg’ ordered correctly along corresponding axis.   Although estimates “mpg” exact, values “mpg” ordered correctly along corresponding axes. comparison exact mapping, ordered variant produces accurate estimates variables.","code":"# Compute the mapping and print the execution time start <- Sys.time() mapping <- ara_ordered_L2(   Z,   V,   variable = variable,   solver = \"clarabel\" ) end <- Sys.time() print(end - start, units = \"secs\") #> Time difference of 0.02636671 secs # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   axis_lines = axis_lines,   color_variable = color_variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/articles/intro_to_aramappings.html","id":"ara-plots-using-parallel-processing","dir":"Articles","previous_headings":"Usage examples","what":"ARA plots using parallel processing","title":"Introduction to aramappings","text":"ARA mappings unconstrained exact problems \\(\\ell^{1}\\) \\(\\ell^{\\infty}\\) can computed parallel using several cores. ideal number cores use depends size input data matrix. general, grows number observations. Users advised analyze runtimes computers estimate adequate number cores use data. following example, first detect available number cores (NCORES) package parallelly, use half (several available). create cluster object function makeCluster() parallel package, specifying number cores use. example compute ARA unconstrained mapping \\(\\ell^{1}\\) norm. function admits weights, lets us choose several solvers. using solver package glpkAPI can specify whether use simplex algorithm, parameter use_glpkAPI_simplex set TRUE, interior point method set FALSE. Lastly, parameter cluster cluster object created . ARA plot generated : Unconstrained ARA plot L1 norm subset Autompg dataset.   Alternatively, following code computes exact ARA mapping \\(\\ell^{1}\\) norm: ARA plot generated : Exact ARA plot L1 norm subset Autompg dataset. Exact estimates obtained variable ‘mpg’.   Lastly, cluster stopped end exploratory analysis process. necessary start cluster stop computing single ARA mapping.","code":"# Detect the number of available CPU cores library(parallelly) NCORES <- parallelly::availableCores() if (NCORES > 1) {   NCORES <- floor(NCORES / 2) } # Create a cluster for parallel processing cl <- parallel::makeCluster(NCORES) # Compute the mapping and print the execution time start <- Sys.time() mapping <- ara_unconstrained_L1(   Z,   V,   weights = weights,   solver = \"glpkAPI\",   use_glpkAPI_simplex = TRUE,   cluster = cl ) end <- Sys.time() print(end - start, units = \"secs\") #> Time difference of 0.2636499 secs draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   weights = weights,   axis_lines = axis_lines,   color_variable = color_variable ) #> [1] 0 # Compute the mapping and print the execution time start <- Sys.time() mapping <- ara_exact_L1(   Z,   V,   variable = variable,   solver = \"glpkAPI\",   use_glpkAPI_simplex = TRUE,   cluster = cl ) end <- Sys.time() print(end - start, units = \"secs\") #> Time difference of 0.2032342 secs draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   axis_lines = axis_lines,   color_variable = color_variable ) #> [1] 0 # Stop cluster parallel::stopCluster(cl)"},{"path":[]},{"path":"https://manuelrubio.github.io/aramappings/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Manuel Rubio-Sánchez. Author, maintainer, copyright holder.","code":""},{"path":"https://manuelrubio.github.io/aramappings/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rubio-Sánchez M (2025). aramappings: Computes Adaptable Radial Axes Mappings. R package version 0.1.0, https://github.com/manuelrubio/aramappings.","code":"@Manual{,   title = {aramappings: Computes Adaptable Radial Axes Mappings},   author = {Manuel Rubio-Sánchez},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/manuelrubio/aramappings}, }"},{"path":"https://manuelrubio.github.io/aramappings/index.html","id":"aramappings-","dir":"","previous_headings":"","what":"Computes Adaptable Radial Axes Mappings","title":"Computes Adaptable Radial Axes Mappings","text":"aramappings computes dimensionality reduction mappings associated Adaptable Radial Axes (ARA) plots (Rubio-Sánchez, Sanchez, Lehmann 2017). ARA type “radial axes” multivariate visualization technique. prominent examples include star coordinates (SC) (Kandogan 2000, 2001) biplots (Gabriel 1971; Gower Hand 1995; Hofmann 2004; Grange, Roux, Gardner-Lubbe 2009; Greenacre 2010), used mainly exploratory purposes, including cluster analysis, outlier trend detection, decision support tasks. main appeal possibility simultaneously display information data observations variables. particular, high-dimensional numerical data observations represented points (visual markers) two- three-dimensional space, data variables represented axis vectors, optionally labeled line axes, similar Cartesian coordinate system. ARA, users create desired visualizations selecting specific sets axis vectors interactively (SC), vector associated data variable. axis vectors indicate directions values associated variables generally increase within plot. Additionally, high-dimensional observations mapped onto plot (optimal sense) order allow users estimate variable values visually projecting points onto labeled axes, Biplots. ARA plot four variables breakfast cereal dataset. High-dimensional data values can estimated via projections onto labeled axes, Biplots. previous figure ARA plot breakfast cereal dataset. axis vectors associated variables chosen distinguish healthier cereals (toward right) less healthy ones (toward left). instance, points right generally larger values Protein Vitamins, lower values Sugar Calories. Users can obtain approximations data values visually projecting plotted points onto labeled axes. example, users estimate value 57 calories point lies right.","code":""},{"path":"https://manuelrubio.github.io/aramappings/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Computes Adaptable Radial Axes Mappings","text":"nine types ARA plots (see vignette). Thus, aramappings provides nine functions generate ARA mapping: ara_unconstrained_L2() ara_unconstrained_L1() ara_unconstrained_Linf() ara_exact_L2() ara_exact_L1() ara_exact_Linf() ara_ordered_L2() ara_ordered_L1() ara_ordered_Linf() function solves convex optimization problem map high-dimensional data observations onto two- three-dimensional points can visualized plot. function included separate source file, calls (optimization) solver-specific functions. functions rely auxiliary methods included file utils.R. main goal package provide functionality generating mappings, create visualizations. Nevertheless, includes method generating two-dimensional plot standardized data: draw_ara_plot_2d_standardized()","code":""},{"path":"https://manuelrubio.github.io/aramappings/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Computes Adaptable Radial Axes Mappings","text":"Install stable version CRAN Install development version aramappings GitHub :","code":""},{"path":"https://manuelrubio.github.io/aramappings/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Computes Adaptable Radial Axes Mappings","text":"recommend starting exploratory analysis using unconstrained ARA plot \\(\\ell^{2}\\) norm, can generated efficiently since mappings can obtained closed-form expression (.e., formula). obvious first step load aramappings package: usage examples use Auto MPG dataset available packages ascentTraining grpnet, Kaggle, UCI Machine Learning Repository (Frank Asuncion 2010). case, load dataset ascentTraining package. Next, select subset numerical variables dataset. selected variables specified vector containing column indices original dataset. Furthermore, rename data set X, simply clarity respect notation defined . ARA functions halt data parameters contain missing values. Thus, proceed eliminating row (data observation) contains missing values. Naturally, another approach consists replacing missing values substituted values (imputation). moment X data.frame. order use ARA functions first need convert matrix: addition, strongly recommend standardizing data using ARA. save result variable Z since function draws plot needs original values X. preprocessed data, next step consists defining axis vectors, rows \\(\\mathbf{V}\\). can obtained manually (ideally graphical user interface), automatic method. instante, \\(\\mathbf{V}\\) matrix defining Principal Component Analysis transfomation (case ARA plot Principal Component Biplot). example, simply define configuration vectors polar coordinates transform Cartesian coordinates pol2cart() function package geometry. also possible define weights order control relative importance estimating accurately axis. nevertheless complex, since accuracy also depends length axis vectors. case, set two weigths 1 another two 0.75. Visually, weights determine level gray used color axis vectors ARA plot. defined data (Z), axis vectors (V), weights (weights), can proceed compute ARA mapping. unconstrained ARA plots \\(\\ell^{2}\\) norm solver parameter set “formula” (default), order obtain mapping closed-form expression. following code computes embedded points saves mapping$P, shows execution runtime involved computing mapping. ARA plots can get cluttered showing axis lines corresponding labels tick marks. Thus, function use draw ARA plot (draw_ara_plot_2d_standardized()) contains parameter called axis_lines specifying subset axis lines (labels) wish visualize. example show axes associated variables “mpg” “acceleration”. Note original data frame variables 1 6. However, since retained four variables (“mpg”, “horsepower”, “weight”, “acceleration”), column index “acceleration” now 4. Also, plotted points can colored according values particular variable. example, color points according value variable “mpg”. Finally, generate ARA plot calling draw_ara_plot_2d_standardized(): Unconstrained ARA plot L2 norm subset Autompg dataset.","code":"# Load package library(aramappings) # Load data library(ascentTraining) # contains the Auto MPG dataset data(\"auto_mpg\") # Define subset of (numerical) variables selected_variables <- c(1, 4, 5, 6) # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\")  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) #> Warning in rm(auto_mpg): objeto 'auto_mpg' no encontrado # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ] # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric) # Standardize data Z <- scale(X) # Define axis vectors (2-dimensional in this example) library(geometry) r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r) # Define weights weights <- c(1, 0.75, 0.75, 1) # Compute the mapping and print the execution time start <- Sys.time() mapping <- ara_unconstrained_L2(   Z,   V,   weights = weights,   solver = \"formula\" ) end <- Sys.time() print(end - start, units = \"secs\") #> Time difference of 0.01072788 secs # Select variables with labeled axis lines on ARA plot axis_lines <- c(1, 4) # 1:\"mpg\", 4:\"acceleration\") # Select variable used for coloring embedded points color_variable <- 1 # \"mpg\" # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   weights = weights,   axis_lines = axis_lines,   color_variable = color_variable ) #> [1] 0"},{"path":[]},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L1.html","id":null,"dir":"Reference","previous_headings":"","what":"Exact Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_exact_L1","title":"Exact Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_exact_L1","text":"ara_exact_L1() computes exact Adaptable Radial Axes (ARA) mappings L1 norm","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exact Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_exact_L1","text":"","code":"ara_exact_L1(   X,   V,   variable = 1,   solver = \"glpkAPI\",   use_glpkAPI_simplex = TRUE,   cluster = NULL )"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exact Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_exact_L1","text":"X Numeric data matrix dimensions N x n, N number observations, n number variables. V Numeric matrix defining axes \"axis vectors\". dimensions n x m, 1<=m<=3 dimension visualization space. row V defines axis vector. variable Integer indicates variable ([1,n]) estimates high-dimensional data exact. Default: variable = 1. solver String indicating package solving linear problem(s). can \"clarabel\" (default), \"glpkAPI\", \"Rglpk\", \"CVXR\". use_glpkAPI_simplex Boolean parameter indicates whether use simplex algorithm (TRUE) interior point method (FALSE), using glpkAPI solver. default TRUE. cluster Optional cluster object related parallel package. supplied, n_LP_problems N, method computes mappings using parallel processing.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exact Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_exact_L1","text":"list three following entries: P numeric N x m matrix containing mapped points. row low-dimensional representation data observation X. status vector length N -th element contains status chosen solver calculating mapping -th data observation. type elements depends particular chosen solver. objval numeric objective value associated solution optimization problem, considering matrix norms. chosen solver fails map one data observations (.e., fails solve related optimization problems), rows P contain NA (available) values. case, objval also NA.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exact Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_exact_L1","text":"ara_exact_L1() computes low-dimensional point representations high-dimensional numerical data (X) according data visualization method \"Adaptable Radial Axes\" (Rubio-Sánchez, 2017), describes collection convex norm optimization problems aimed minimizing estimates original values X dot products mapped points axis vectors (rows V). particular function solves constrained optimization problem Eq. (13), L1 vector norm. equality constraint forces estimates exact one data variables.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Exact Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_exact_L1","text":"M. Rubio-Sánchez, . Sanchez, D. J. Lehmann: Adaptable radial axes plots improved multivariate data visualization. Computer Graphics Forum 36, 3 (2017), 389–399. doi:10.1111/cgf.13196","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exact Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_exact_L1","text":"","code":"# Load data if (!require(ascentTraining)) { # contains the Auto MPG dataset   print(\"Trying to install package ascentTraining\")   install.packages(\"ascentTraining\")   if (!require(ascentTraining)) {     stop(\"Could not install package ascentTraining\")   } } #> Loading required package: ascentTraining data(\"auto_mpg\")  # Define subset of (numerical) variables # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\" selected_variables <- c(1, 4, 5, 6)  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) #> Warning: object 'auto_mpg' not found  # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ]  # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric)  # Standardize data Z <- scale(X)  # Define axis vectors (2-dimensional in this example) if (!require(geometry)) {   print(\"Trying to install package geometry\")   install.packages(\"geometry\")   if (!require(geometry)) {     stop(\"Could not install package geometry\")   } } #> Loading required package: geometry r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r)  # Select variable for exact estimates, and use it for coloring the embedded # points n <- nrow(V) variable <- sample(1:n, 1)  # Detect the number of available CPU cores if (!require(parallelly)) {   print(\"Trying to install package parallelly\")   install.packages(\"parallelly\")   if (!require(parallelly)) {     stop(\"Could not install package parallelly\")   } } #> Loading required package: parallelly NCORES <- parallelly::availableCores(omit = 1)  # Create a cluster for parallel processing cl <- parallel::makeCluster(NCORES)  # Compute the mapping mapping <- ara_exact_L1(   Z,   V,   variable = variable,   solver = \"glpkAPI\",   use_glpkAPI_simplex = TRUE,   cluster = cl )  # Stop cluster parallel::stopCluster(cl)  # Select variables with labeled axis lines on ARA plot axis_lines <- variable  # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   axis_lines = axis_lines,   color_variable = variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L2.html","id":null,"dir":"Reference","previous_headings":"","what":"Exact Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_exact_L2","title":"Exact Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_exact_L2","text":"ara_exact_L2() computes exact Adaptable Radial Axes (ARA) mappings L2 norm","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exact Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_exact_L2","text":"","code":"ara_exact_L2(X, V, variable = 1, solver = \"formula\")"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exact Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_exact_L2","text":"X Numeric data matrix dimensions N x n, N number observations, n number variables. V Numeric matrix defining axes \"axis vectors\". dimensions n x m, 1<=m<=3 dimension visualization space. row V defines axis vector. variable Integer indicates variable ([1,n]) estimates high-dimensional data exact. Default: variable = 1. solver String indicating package method solving optimization problem. can \"formula\" (default), solution obtained closed-form formula, \"CVXR\".","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exact Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_exact_L2","text":"list three following entries: P numeric N x m matrix containing mapped points. row low-dimensional representation data observation X. status vector length N -th element contains status chosen solver calculating mapping -th data observation. type elements depends particular chosen solver. objval numeric objective value associated solution optimization problem, considering matrix norms. output status vector returns 2-norm condition number V. chosen solver fails map data (.e., fails solve related optimization problem), P contain NA (available) values. case, objval also NA.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exact Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_exact_L2","text":"ara_exact_L2() computes low-dimensional point representations high-dimensional numerical data (X) according data visualization method \"Adaptable Radial Axes\" (Rubio-Sánchez, 2017), describes collection convex norm optimization problems aimed minimizing estimates original values X dot products mapped points axis vectors (rows V). particular function solves constrained optimization problem Eq. (13), squared-Euclidean norm. equality constraint forces estimates exact one data variables. problem admits closed-form solutions.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Exact Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_exact_L2","text":"M. Rubio-Sánchez, . Sanchez, D. J. Lehmann: Adaptable radial axes plots improved multivariate data visualization. Computer Graphics Forum 36, 3 (2017), 389–399. doi:10.1111/cgf.13196","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_L2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exact Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_exact_L2","text":"","code":"# Load data if (!require(ascentTraining)) { # contains the Auto MPG dataset   print(\"Trying to install package ascentTraining\")   install.packages(\"ascentTraining\")   if (!require(ascentTraining)) {     stop(\"Could not install package ascentTraining\")   } } data(\"auto_mpg\")  # Define subset of (numerical) variables # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\" selected_variables <- c(1, 4, 5, 6)  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) #> Warning: object 'auto_mpg' not found  # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ]  # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric)  # Standardize data Z <- scale(X)  # Define axis vectors (2-dimensional in this example) if (!require(geometry)) {   print(\"Trying to install package geometry\")   install.packages(\"geometry\")   if (!require(geometry)) {     stop(\"Could not install package geometry\")   } } r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r)  # Select variable for exact estimates, and use it for coloring the embedded # points n <- nrow(V) variable <- sample(1:n, 1)  # Compute the mapping mapping <- ara_exact_L2(   Z,   V,   variable = variable,   solver = \"formula\" )  # Select variables with labeled axis lines on ARA plot axis_lines <- variable  # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   axis_lines = axis_lines,   color_variable = variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_Linf.html","id":null,"dir":"Reference","previous_headings":"","what":"Exact Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_exact_Linf","title":"Exact Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_exact_Linf","text":"ara_exact_Linf() computes exact Adaptable Radial Axes (ARA) mappings L-infinity norm","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_Linf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exact Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_exact_Linf","text":"","code":"ara_exact_Linf(   X,   V,   variable = 1,   solver = \"glpkAPI\",   use_glpkAPI_simplex = TRUE,   cluster = NULL )"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_Linf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exact Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_exact_Linf","text":"X Numeric data matrix dimensions N x n, N number observations, n number variables. V Numeric matrix defining axes \"axis vectors\". dimensions n x m, 1<=m<=3 dimension visualization space. row V defines axis vector. variable Integer indicates variable ([1,n]) estimates high-dimensional data exact. Default: variable = 1. solver String indicating package solving linear problem(s). can \"clarabel\" (default), \"glpkAPI\", \"Rglpk\", \"CVXR\". use_glpkAPI_simplex Boolean parameter indicates whether use simplex algorithm (TRUE) interior point method (FALSE), using glpkAPI solver. default TRUE. cluster Optional cluster object related parallel package. supplied, n_LP_problems N, method computes mappings using parallel processing.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_Linf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exact Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_exact_Linf","text":"list three following entries: P numeric N x m matrix containing mapped points. row low-dimensional representation data observation X. status vector length N -th element contains status chosen solver calculating mapping -th data observation. type elements depends particular chosen solver. objval numeric objective value associated solution optimization problem, considering matrix norms. chosen solver fails map one data observations (.e., fails solve related optimization problems), rows P contain NA (available) values. case, objval also NA.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_Linf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exact Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_exact_Linf","text":"ara_exact_Linf() computes low-dimensional point representations high-dimensional numerical data (X) according data visualization method \"Adaptable Radial Axes\" (Rubio-Sánchez, 2017), describes collection convex norm optimization problems aimed minimizing estimates original values X dot products mapped points axis vectors (rows V). particular function solves constrained optimization problem Eq. (13), L-infinity vector norm. equality constraint forces estimates exact one data variables.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_Linf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Exact Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_exact_Linf","text":"M. Rubio-Sánchez, . Sanchez, D. J. Lehmann: Adaptable radial axes plots improved multivariate data visualization. Computer Graphics Forum 36, 3 (2017), 389–399. doi:10.1111/cgf.13196","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_exact_Linf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exact Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_exact_Linf","text":"","code":"# Load data if (!require(ascentTraining)) { # contains the Auto MPG dataset   print(\"Trying to install package ascentTraining\")   install.packages(\"ascentTraining\")   if (!require(ascentTraining)) {     stop(\"Could not install package ascentTraining\")   } } data(\"auto_mpg\")  # Define subset of (numerical) variables # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\" selected_variables <- c(1, 4, 5, 6)  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) #> Warning: object 'auto_mpg' not found  # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ]  # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric)  # Standardize data Z <- scale(X)  # Define axis vectors (2-dimensional in this example) if (!require(geometry)) {   print(\"Trying to install package geometry\")   install.packages(\"geometry\")   if (!require(geometry)) {     stop(\"Could not install package geometry\")   } } r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r)  # Select variable for exact estimates, and use it for coloring the embedded # points n <- nrow(V) variable <- sample(1:n, 1)  # Detect the number of available CPU cores if (!require(parallelly)) {   print(\"Trying to install package parallelly\")   install.packages(\"parallelly\")   if (!require(parallelly)) {     stop(\"Could not install package parallelly\")   } } NCORES <- parallelly::availableCores(omit = 1)  # Create a cluster for parallel processing cl <- parallel::makeCluster(NCORES)  # Compute the mapping mapping <- ara_exact_Linf(   Z,   V,   variable = variable,   solver = \"glpkAPI\",   use_glpkAPI_simplex = TRUE,   cluster = cl )  # Stop cluster parallel::stopCluster(cl)  # Select variables with labeled axis lines on ARA plot axis_lines <- variable  # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   axis_lines = axis_lines,   color_variable = variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L1.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordered Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_ordered_L1","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_ordered_L1","text":"ara_ordered_L1() computes ordered Adaptable Radial Axes (ARA) mappings L1 norm","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_ordered_L1","text":"","code":"ara_ordered_L1(X, V, variable = 1, solver = \"clarabel\")"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_ordered_L1","text":"X Numeric data matrix dimensions N x n, N number observations, n number variables. V Numeric matrix defining axes \"axis vectors\". dimensions n x m, 1<=m<=3 dimension visualization space. row V defines axis vector. variable Integer indicates variable ([1,n]) estimates high-dimensional data exact. Default: variable = 1. solver String indicating package solving linear problem(s). can \"clarabel\" (default), \"glpkAPI\", \"Rglpk\", \"CVXR\".","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_ordered_L1","text":"list three following entries: P numeric N x m matrix containing mapped points. row low-dimensional representation data observation X. status vector length N -th element contains status chosen solver calculating mapping -th data observation. type elements depends particular chosen solver. objval numeric objective value associated solution optimization problem, considering matrix norms. chosen solver fails map data (.e., fails solve related optimization problem), P contain NA (available) values. case, objval also NA.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_ordered_L1","text":"ara_ordered_L1() computes low-dimensional point representations high-dimensional numerical data (X) according data visualization method \"Adaptable Radial Axes\" (Rubio-Sánchez, 2017), describes collection convex norm optimization problems aimed minimizing estimates original values X dot products mapped points axis vectors (rows V). particular function solves constrained optimization problem Eq. (14), L1 norm. inequality constraint ensures estimates selected variable ordered accordance original values. words, ignoring ties, estimate data observation -th smallest value correspond -th smallest estimate.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_ordered_L1","text":"M. Rubio-Sánchez, . Sanchez, D. J. Lehmann: Adaptable radial axes plots improved multivariate data visualization. Computer Graphics Forum 36, 3 (2017), 389–399. doi:10.1111/cgf.13196","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_ordered_L1","text":"","code":"# Load data if (!require(ascentTraining)) { # contains the Auto MPG dataset   print(\"Trying to install package ascentTraining\")   install.packages(\"ascentTraining\")   if (!require(ascentTraining)) {     stop(\"Could not install package ascentTraining\")   } } data(\"auto_mpg\")  # Define subset of (numerical) variables # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\" selected_variables <- c(1, 4, 5, 6)  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) #> Warning: object 'auto_mpg' not found  # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ]  # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric)  # Standardize data Z <- scale(X)  # Define axis vectors (2-dimensional in this example) if (!require(geometry)) {   print(\"Trying to install package geometry\")   install.packages(\"geometry\")   if (!require(geometry)) {     stop(\"Could not install package geometry\")   } } r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r)  # Select variable for exact estimates, and use it for coloring the embedded # points n <- nrow(V) variable <- sample(1:n, 1)  # Compute the mapping mapping <- ara_ordered_L1(   Z,   V,   variable = variable,   solver = \"clarabel\" )  # Select variables with labeled axis lines on ARA plot axis_lines <- variable  # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   axis_lines = axis_lines,   color_variable = variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L2.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordered Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_ordered_L2","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_ordered_L2","text":"ara_ordered_L2() computes ordered Adaptable Radial Axes (ARA) mappings L2 norm","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_ordered_L2","text":"","code":"ara_ordered_L2(X, V, variable = 1, solver = \"clarabel\")"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_ordered_L2","text":"X Numeric data matrix dimensions N x n, N number observations, n number variables. V Numeric matrix defining axes \"axis vectors\". dimensions n x m, 1<=m<=3 dimension visualization space. row V defines axis vector. variable Integer indicates variable ([1,n]) estimates high-dimensional data exact. Default: variable = 1. solver String indicating package solving linear problem(s). can \"clarabel\" (default), \"glpkAPI\", \"Rglpk\", \"CVXR\".","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_ordered_L2","text":"list three following entries: P numeric N x m matrix containing mapped points. row low-dimensional representation data observation X. status vector length N -th element contains status chosen solver calculating mapping -th data observation. type elements depends particular chosen solver. objval numeric objective value associated solution optimization problem, considering matrix norms. chosen solver fails map data (.e., fails solve related optimization problem), P contain NA (available) values. case, objval also NA.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_ordered_L2","text":"ara_ordered_L2() computes low-dimensional point representations high-dimensional numerical data (X) according data visualization method \"Adaptable Radial Axes\" (Rubio-Sánchez, 2017), describes collection convex norm optimization problems aimed minimizing estimates original values X dot products mapped points axis vectors (rows V). particular function solves constrained optimization problem Eq. (14), squared-Euclidean norm. inequality constraint ensures estimates selected variable ordered accordance original values. words, ignoring ties, estimate data observation -th smallest value correspond -th smallest estimate.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_ordered_L2","text":"M. Rubio-Sánchez, . Sanchez, D. J. Lehmann: Adaptable radial axes plots improved multivariate data visualization. Computer Graphics Forum 36, 3 (2017), 389–399. doi:10.1111/cgf.13196","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_L2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_ordered_L2","text":"","code":"# Load data if (!require(ascentTraining)) { # contains the Auto MPG dataset   print(\"Trying to install package ascentTraining\")   install.packages(\"ascentTraining\")   if (!require(ascentTraining)) {     stop(\"Could not install package ascentTraining\")   } } data(\"auto_mpg\")  # Define subset of (numerical) variables # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\" selected_variables <- c(1, 4, 5, 6)  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) #> Warning: object 'auto_mpg' not found  # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ]  # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric)  # Standardize data Z <- scale(X)  # Define axis vectors (2-dimensional in this example) if (!require(geometry)) {   print(\"Trying to install package geometry\")   install.packages(\"geometry\")   if (!require(geometry)) {     stop(\"Could not install package geometry\")   } } r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r)  # Select variable for exact estimates, and use it for coloring the embedded # points n <- nrow(V) variable <- sample(1:n, 1)  # Compute the mapping mapping <- ara_ordered_L2(   Z,   V,   variable = variable,   solver = \"clarabel\" )  # Select variables with labeled axis lines on ARA plot axis_lines <- variable  # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   axis_lines = axis_lines,   color_variable = variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_Linf.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordered Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_ordered_Linf","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_ordered_Linf","text":"ara_ordered_Linf() computes ordered Adaptable Radial Axes (ARA) mappings Linf norm","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_Linf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_ordered_Linf","text":"","code":"ara_ordered_Linf(X, V, variable = 1, solver = \"clarabel\")"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_Linf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_ordered_Linf","text":"X Numeric data matrix dimensions N x n, N number observations, n number variables. V Numeric matrix defining axes \"axis vectors\". dimensions n x m, 1<=m<=3 dimension visualization space. row V defines axis vector. variable Integer indicates variable ([1,n]) estimates high-dimensional data exact. Default: variable = 1. solver String indicating package solving linear problem(s). can \"clarabel\" (default), \"glpkAPI\", \"Rglpk\", \"CVXR\".","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_Linf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_ordered_Linf","text":"list three following entries: P numeric N x m matrix containing mapped points. row low-dimensional representation data observation X. status vector length N -th element contains status chosen solver calculating mapping -th data observation. type elements depends particular chosen solver. objval numeric objective value associated solution optimization problem, considering matrix norms. chosen solver fails map data (.e., fails solve related optimization problem), P contain NA (available) values. case, objval also NA.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_Linf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_ordered_Linf","text":"ara_ordered_Linf() computes low-dimensional point representations high-dimensional numerical data (X) according data visualization method \"Adaptable Radial Axes\" (Rubio-Sánchez, 2017), describes collection convex norm optimization problems aimed minimizing estimates original values X dot products mapped points axis vectors (rows V). particular function solves constrained optimization problem Eq. (14), L-infinity norm. inequality constraint ensures estimates selected variable ordered accordance original values. words, ignoring ties, estimate data observation -th smallest value correspond -th smallest estimate.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_Linf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_ordered_Linf","text":"M. Rubio-Sánchez, . Sanchez, D. J. Lehmann: Adaptable radial axes plots improved multivariate data visualization. Computer Graphics Forum 36, 3 (2017), 389–399. doi:10.1111/cgf.13196","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_ordered_Linf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ordered Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_ordered_Linf","text":"","code":"# Load data if (!require(ascentTraining)) { # contains the Auto MPG dataset   print(\"Trying to install package ascentTraining\")   install.packages(\"ascentTraining\")   if (!require(ascentTraining)) {     stop(\"Could not install package ascentTraining\")   } } data(\"auto_mpg\")  # Define subset of (numerical) variables # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\" selected_variables <- c(1, 4, 5, 6)  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) #> Warning: object 'auto_mpg' not found  # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ]  # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric)  # Standardize data Z <- scale(X)  # Define axis vectors (2-dimensional in this example) if (!require(geometry)) {   print(\"Trying to install package geometry\")   install.packages(\"geometry\")   if (!require(geometry)) {     stop(\"Could not install package geometry\")   } } r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r)  # Select variable for exact estimates, and use it for coloring the embedded # points n <- nrow(V) variable <- sample(1:n, 1)  # Compute the mapping mapping <- ara_ordered_Linf(   Z,   V,   variable = variable,   solver = \"clarabel\" )  # Select variables with labeled axis lines on ARA plot axis_lines <- variable  # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   axis_lines = axis_lines,   color_variable = variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L1.html","id":null,"dir":"Reference","previous_headings":"","what":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_unconstrained_L1","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_unconstrained_L1","text":"ara_unconstrained_L1() computes unconstrained Adaptable Radial Axes (ARA) mappings L1 norm","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_unconstrained_L1","text":"","code":"ara_unconstrained_L1(   X,   V,   weights = rep(1, ncol(X)),   solver = \"glpkAPI\",   use_glpkAPI_simplex = TRUE,   cluster = NULL )"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_unconstrained_L1","text":"X Numeric data matrix dimensions N x n, N number observations, n number variables. V Numeric matrix defining axes \"axis vectors\". dimensions n x m, 1<=m<=3 dimension visualization space. row V defines axis vector. weights Numeric array specifying optional non-negative weights associated variable. function considers share value. Default: array n ones. solver String indicating package solving linear problem(s). can \"clarabel\" (default), \"glpkAPI\", \"Rglpk\", \"CVXR\". use_glpkAPI_simplex Boolean parameter indicates whether use simplex algorithm (TRUE) interior point method (FALSE), using glpkAPI solver. default TRUE. cluster Optional cluster object related parallel package. supplied, n_LP_problems N, method computes mappings using parallel processing.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_unconstrained_L1","text":"list three following entries: P numeric N x m matrix containing mapped points. row low-dimensional representation data observation X. status vector length N -th element contains status chosen solver calculating mapping -th data observation. type elements depends particular chosen solver. objval numeric objective value associated solution optimization problem, considering matrix norms, ignoring weights. chosen solver fails map one data observations (.e., fails solve related optimization problems), rows P contain NA (available) values. case, objval also NA.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_unconstrained_L1","text":"ara_unconstrained_L1() computes low-dimensional point representations high-dimensional numerical data (X) according data visualization method \"Adaptable Radial Axes\" (Rubio-Sánchez, 2017), describes collection convex norm optimization problems aimed minimizing estimates original values X dot products mapped points axis vectors (rows V). particular function solves unconstrained optimization problem Eq. (10), L1 vector norm. Specifically, solves equivalent linear problems described (11). Optional non-negative weights (weights) associated data variable can supplied solve problem Eq. (15).","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_unconstrained_L1","text":"M. Rubio-Sánchez, . Sanchez, D. J. Lehmann: Adaptable radial axes plots improved multivariate data visualization. Computer Graphics Forum 36, 3 (2017), 389–399. doi:10.1111/cgf.13196","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L1 norm — ara_unconstrained_L1","text":"","code":"# Load data if (!require(ascentTraining)) { # contains the Auto MPG dataset   print(\"Trying to install package ascentTraining\")   install.packages(\"ascentTraining\")   if (!require(ascentTraining)) {     stop(\"Could not install package ascentTraining\")   } } data(\"auto_mpg\")  # Define subset of (numerical) variables # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\" selected_variables <- c(1, 4, 5, 6)  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) #> Warning: object 'auto_mpg' not found  # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ]  # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric)  # Standardize data Z <- scale(X)  # Define axis vectors (2-dimensional in this example) if (!require(geometry)) {   print(\"Trying to install package geometry\")   install.packages(\"geometry\")   if (!require(geometry)) {     stop(\"Could not install package geometry\")   } } r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r)  # Define weights weights <- c(1, 0.75, 0.75, 1)  # Detect the number of available CPU cores if (!require(parallelly)) {   print(\"Trying to install package parallelly\")   install.packages(\"parallelly\")   if (!require(parallelly)) {     stop(\"Could not install package parallelly\")   } } NCORES <- parallelly::availableCores(omit = 1)  # Create a cluster for parallel processing cl <- parallel::makeCluster(NCORES)  # Compute the mapping mapping <- ara_unconstrained_L1(   Z,   V,   weights = weights,   solver = \"glpkAPI\",   use_glpkAPI_simplex = TRUE,   cluster = cl )  # Stop cluster parallel::stopCluster(cl)  # Select variables with labeled axis lines on ARA plot axis_lines <- c(1, 4) # 1:\"mpg\", 4:\"acceleration\")  # Select variable used for coloring embedded points color_variable <- 1 # \"mpg\"  # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   weights = weights,   axis_lines = axis_lines,   color_variable = color_variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L2.html","id":null,"dir":"Reference","previous_headings":"","what":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_unconstrained_L2","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_unconstrained_L2","text":"ara_unconstrained_L2() computes unconstrained Adaptable Radial Axes (ARA) mappings L2 norm","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_unconstrained_L2","text":"","code":"ara_unconstrained_L2(X, V, weights = rep(1, ncol(X)), solver = \"formula\")"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_unconstrained_L2","text":"X Numeric data matrix dimensions N x n, N number observations, n number variables. V Numeric matrix defining axes \"axis vectors\". dimensions n x m, 1<=m<=3 dimension visualization space. row V defines axis vector. weights Numeric array specifying optional non-negative weights associated variable. function considers share value. Default: array n ones. solver String indicating package method solving optimization problem. can \"formula\" (default), solution obtained closed-form formula, \"CVXR\".","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_unconstrained_L2","text":"list three following entries: P numeric N x m matrix containing mapped points. row low-dimensional representation data observation X. status vector length N -th element contains status chosen solver calculating mapping -th data observation. type elements depends particular chosen solver. objval numeric objective value associated solution optimization problem, considering matrix norms, ignoring weights. solver \"formula\" function always produces valid solutions (P), since pseudo-inverse matrix always exists. Thus, output status vector relevant, returned consonance adaptable radial axes functions package. CVRX used failed map data observations (.e., failed solve related optimization problem), P matrix containing NA (available) values, objval also NA.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_unconstrained_L2","text":"ara_unconstrained_L2() computes low-dimensional point representations high-dimensional numerical data (X) according data visualization method \"Adaptable Radial Axes\" (Rubio-Sánchez, 2017), describes collection convex norm optimization problems aimed minimizing estimates original values X dot products mapped points axis vectors (rows V). particular function solves unconstrained optimization problem Eq. (10), squared-Euclidean norm. Optional non-negative weights (weights) associated data variable can supplied solve problem Eq. (15).","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_L2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L2 norm — ara_unconstrained_L2","text":"","code":"# Load data if (!require(ascentTraining)) { # contains the Auto MPG dataset   print(\"Trying to install package ascentTraining\")   install.packages(\"ascentTraining\")   if (!require(ascentTraining)) {     stop(\"Could not install package ascentTraining\")   } } data(\"auto_mpg\")  # Define subset of (numerical) variables # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\" selected_variables <- c(1, 4, 5, 6)  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) #> Warning: object 'auto_mpg' not found  # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ]  # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric)  # Standardize data Z <- scale(X)  # Define axis vectors (2-dimensional in this example) if (!require(geometry)) {   print(\"Trying to install package geometry\")   install.packages(\"geometry\")   if (!require(geometry)) {     stop(\"Could not install package geometry\")   } } r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r)  # Define weights weights <- c(1, 0.75, 0.75, 1)  # Compute the mapping mapping <- ara_unconstrained_L2(   Z,   V,   weights = weights,   solver = \"formula\" )  # Select variables with labeled axis lines on ARA plot axis_lines <- c(1, 4) # 1:\"mpg\", 4:\"acceleration\")  # Select variable used for coloring embedded points color_variable <- 1 # \"mpg\"  # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   weights = weights,   axis_lines = axis_lines,   color_variable = color_variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_Linf.html","id":null,"dir":"Reference","previous_headings":"","what":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_unconstrained_Linf","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_unconstrained_Linf","text":"ara_unconstrained_Linf() computes unconstrained Adaptable Radial Axes (ARA) mappings L-infinity norm","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_Linf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_unconstrained_Linf","text":"","code":"ara_unconstrained_Linf(   X,   V,   weights = rep(1, ncol(X)),   solver = \"glpkAPI\",   use_glpkAPI_simplex = TRUE,   cluster = NULL )"},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_Linf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_unconstrained_Linf","text":"X Numeric data matrix dimensions N x n, N number observations, n number variables. V Numeric matrix defining axes \"axis vectors\". dimensions n x m, 1<=m<=3 dimension visualization space. row V defines axis vector. weights Numeric array specifying optional non-negative weights associated variable. function considers share value. Default: array n ones. solver String indicating package solving linear problem(s). can \"clarabel\" (default), \"glpkAPI\", \"Rglpk\", \"CVXR\". use_glpkAPI_simplex Boolean parameter indicates whether use simplex algorithm (TRUE) interior point method (FALSE), using glpkAPI solver. default TRUE. cluster Optional cluster object related parallel package. supplied, n_LP_problems N, method computes mappings using parallel processing.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_Linf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_unconstrained_Linf","text":"list three following entries: P numeric N x m matrix containing mapped points. row low-dimensional representation data observation X. status vector length N -th element contains status chosen solver calculating mapping -th data observation. type elements depends particular chosen solver. objval numeric objective value associated solution optimization problem, considering matrix norms, ignoring weights. chosen solver fails map one data observations (.e., fails solve related optimization problems), rows P contain NA (available) values. case, objval also NA.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_Linf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_unconstrained_Linf","text":"ara_unconstrained_Linf() computes low-dimensional point representations high-dimensional numerical data (X) according data visualization method \"Adaptable Radial Axes\" (Rubio-Sánchez, 2017), describes collection convex norm optimization problems aimed minimizing estimates original values X dot products mapped points axis vectors (rows V). particular function solves unconstrained optimization problem Eq. (10), L-infinity vector norm. Specifically, solves equivalent linear problems described (12). Optional non-negative weights (weights) associated data variable can supplied solve problem Eq. (15).","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_Linf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_unconstrained_Linf","text":"M. Rubio-Sánchez, . Sanchez, D. J. Lehmann: Adaptable radial axes plots improved multivariate data visualization. Computer Graphics Forum 36, 3 (2017), 389–399. doi:10.1111/cgf.13196","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/ara_unconstrained_Linf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unconstrained Adaptable Radial Axes (ARA) mappings using the L-infinity norm — ara_unconstrained_Linf","text":"","code":"# Load data if (!require(ascentTraining)) { # contains the Auto MPG dataset   print(\"Trying to install package ascentTraining\")   install.packages(\"ascentTraining\")   if (!require(ascentTraining)) {     stop(\"Could not install package ascentTraining\")   } } data(\"auto_mpg\")  # Define subset of (numerical) variables # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\" selected_variables <- c(1, 4, 5, 6)  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) #> Warning: object 'auto_mpg' not found  # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ]  # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric)  # Standardize data Z <- scale(X)  # Define axis vectors (2-dimensional in this example) if (!require(geometry)) {   print(\"Trying to install package geometry\")   install.packages(\"geometry\")   if (!require(geometry)) {     stop(\"Could not install package geometry\")   } } r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r)  # Define weights weights <- c(1, 0.75, 0.75, 1)  # Detect the number of available CPU cores if (!require(parallelly)) {   print(\"Trying to install package parallelly\")   install.packages(\"parallelly\")   if (!require(parallelly)) {     stop(\"Could not install package parallelly\")   } } NCORES <- parallelly::availableCores(omit = 1)  # Create a cluster for parallel processing cl <- parallel::makeCluster(NCORES)  # Compute the mapping mapping <- ara_unconstrained_Linf(   Z,   V,   weights = weights,   solver = \"glpkAPI\",   use_glpkAPI_simplex = TRUE,   cluster = cl )  # Stop cluster parallel::stopCluster(cl)  # Select variables with labeled axis lines on ARA plot axis_lines <- c(1, 4) # 1:\"mpg\", 4:\"acceleration\")  # Select variable used for coloring embedded points color_variable <- 1 # \"mpg\"  # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   weights = weights,   axis_lines = axis_lines,   color_variable = color_variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/reference/draw_ara_plot_2d_standardized.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws a 2D Adaptable Radial Axes (ARA) plot for standardized data — draw_ara_plot_2d_standardized","title":"Draws a 2D Adaptable Radial Axes (ARA) plot for standardized data — draw_ara_plot_2d_standardized","text":"Creates plot associated Adaptable Radial Axes (ARA) mapping","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/draw_ara_plot_2d_standardized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws a 2D Adaptable Radial Axes (ARA) plot for standardized data — draw_ara_plot_2d_standardized","text":"","code":"draw_ara_plot_2d_standardized(   Z,   X,   V,   P,   weights = rep(1, ncol(Z)),   axis_lines = NULL,   color_variable = NULL )"},{"path":"https://manuelrubio.github.io/aramappings/reference/draw_ara_plot_2d_standardized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws a 2D Adaptable Radial Axes (ARA) plot for standardized data — draw_ara_plot_2d_standardized","text":"Z Standardized numeric data matrix dimensions N x n, N number observations, n number variables. X Original numeric data matrix (standardizing) dimensions N x n V Numeric matrix \"axis vectors\" dimensions n x 2, row V defines axis vector. P Numeric data matrix dimensions N x 2 containing N 2-dimensional representations data observations (.e., embedded points). weights Numeric array specifying non-negative weights associated variable. Can also 1D matrix. Default: array n ones. axis_lines Array integer variable indices ([1,n]) indicating calibrated axis lines displayed. Default: NULL. color_variable Integer ([1,n]) indicates variable used color embedded points. Default: NULL.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/draw_ara_plot_2d_standardized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draws a 2D Adaptable Radial Axes (ARA) plot for standardized data — draw_ara_plot_2d_standardized","text":"Returns 0 function terminates without errors","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/draw_ara_plot_2d_standardized.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draws a 2D Adaptable Radial Axes (ARA) plot for standardized data — draw_ara_plot_2d_standardized","text":"function draw_ara_plot_2d_standardized() generates basic two-dimensional plot related \"Adaptable Radial Axes\" (ARA) mapping (Rubio-Sánchez, 2017) high-dimensional numerical data (X) previously standardized (Z). plot displays set 2D points (P), representing observation high-dimensional dataset. also includes collection axis vectors (V), corresponding specific data variable. ARA mapping incorporates weights (weights), axis vectors colored accordingly reflect weighting. user-specified subset variables (axis_lines), function additionally draws axis lines tick marks represent values selected variables. Users can estimate values high-dimensional data visually projecting plotted points orthogonally onto axes. plotted points can also colored according values variable color_variable.","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/draw_ara_plot_2d_standardized.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Draws a 2D Adaptable Radial Axes (ARA) plot for standardized data — draw_ara_plot_2d_standardized","text":"M. Rubio-Sánchez, . Sanchez, D. J. Lehmann: Adaptable radial axes plots improved multivariate data visualization. Computer Graphics Forum 36, 3 (2017), 389–399. doi:10.1111/cgf.13196","code":""},{"path":"https://manuelrubio.github.io/aramappings/reference/draw_ara_plot_2d_standardized.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draws a 2D Adaptable Radial Axes (ARA) plot for standardized data — draw_ara_plot_2d_standardized","text":"","code":"# Load data if (!require(ascentTraining)) { # contains the Auto MPG dataset   print(\"Trying to install package ascentTraining\")   install.packages(\"ascentTraining\")   if (!require(ascentTraining)) {     stop(\"Could not install package ascentTraining\")   } } data(\"auto_mpg\")  # Define subset of (numerical) variables # 1:\"mpg\", 4:\"horsepower\", 5:\"weight\", 6:\"acceleration\" selected_variables <- c(1, 4, 5, 6)  # Retain only selected variables and rename dataset as X X <- auto_mpg[, selected_variables] # Select a subset of variables rm(auto_mpg) #> Warning: object 'auto_mpg' not found  # Remove rows with missing values from X N <- nrow(X) rows_to_delete <- NULL for (i in 1:N) {   if (sum(is.na(X[i, ])) > 0) {     rows_to_delete <- c(rows_to_delete, -i)   } } X <- X[rows_to_delete, ]  # Convert X to matrix X <- apply(as.matrix.noquote(X), 2, as.numeric)  # Standardize data Z <- scale(X)  # Define axis vectors (2-dimensional in this example) if (!require(geometry)) {   print(\"Trying to install package geometry\")   install.packages(\"geometry\")   if (!require(geometry)) {     stop(\"Could not install package geometry\")   } } r <- c(0.8, 1, 1.2, 1) theta <- c(225, 100, 315, 80) * 2 * pi / 360 V <- pol2cart(theta, r)  # Define weights weights <- c(1, 0.75, 0.75, 1)  # Compute the mapping mapping <- ara_unconstrained_L2(Z, V, weights = weights, solver = \"formula\")  # Select variables with labeled axis lines on ARA plot axis_lines <- c(1, 4) # 1:\"mpg\", 4:\"acceleration\")  # Select variable used for coloring embedded points color_variable <- 1 # \"mpg\"  # Draw the ARA plot draw_ara_plot_2d_standardized(   Z,   X,   V,   mapping$P,   weights = weights,   axis_lines = axis_lines,   color_variable = color_variable ) #> [1] 0"},{"path":"https://manuelrubio.github.io/aramappings/news/index.html","id":"aramappings-010","dir":"Changelog","previous_headings":"","what":"aramappings 0.1.0","title":"aramappings 0.1.0","text":"first release aramappings ara_unconstrained_L2() ara_unconstrained_L1() ara_unconstrained_Linf() ara_exact_L2() ara_exact_L1() ara_exact_Linf() ara_ordered_L2() ara_ordered_L1() ara_ordered_Linf() draw_ara_plot_2d_standardized() Introduction aramappings","code":""}]
